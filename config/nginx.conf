# Nginx Configuration for API Gateway Load Balancing
# Save this as nginx.conf

events {
    worker_connections 1024;
}

http {
    # Upstream definition - API Gateway instances
    upstream api_gateway_cluster {
        # Load balancing method
        least_conn;
        
        # Gateway instances
        server localhost:5000 max_fails=3 fail_timeout=30s;
        server localhost:5100 max_fails=3 fail_timeout=30s backup;
        server localhost:5200 max_fails=3 fail_timeout=30s backup;
        
        # Health check (requires nginx-plus or custom module)
        # health_check uri=/health interval=10s;
    }

    # Load balancer server
    server {
        listen 8080;
        server_name localhost;

        # Logging
        access_log /var/log/nginx/api_gateway_access.log;
        error_log /var/log/nginx/api_gateway_error.log;

        # Add custom headers
        add_header X-Load-Balancer Nginx;
        add_header X-Request-ID $request_id;

        # Main location - proxy to API Gateway cluster
        location / {
            proxy_pass http://api_gateway_cluster;
            
            # Headers for proper proxying
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Retry logic
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 10s;
        }

        # Health check endpoint for the load balancer itself
        location /nginx-health {
            access_log off;
            return 200 "nginx is healthy\n";
            add_header Content-Type text/plain;
        }

        # Status page
        location /nginx-status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }
    }
}
