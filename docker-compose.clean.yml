version: '3.8'

services:
  # API Gateway Instance 1
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
    volumes:
      - ./ocelot.docker.json:/app/ocelot.json:ro
      - ./logs:/app/logs
    depends_on:
      - users-api
      - locations-api
    networks:
      - api-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # API Gateway Instance 2 (for high availability)
  api-gateway-2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api-gateway-2
    ports:
      - "8081:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
    volumes:
      - ./ocelot.docker.json:/app/ocelot.json:ro
      - ./logs:/app/logs
    depends_on:
      - users-api
      - locations-api
    networks:
      - api-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Users API
  users-api:
    build:
      context: ./TestApis/UsersApi
      dockerfile: Dockerfile
    container_name: users-api
    ports:
      - "5001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
    networks:
      - api-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/api/users"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Locations API
  locations-api:
    build:
      context: ./TestApis/LocationsApi
      dockerfile: Dockerfile
    container_name: locations-api
    ports:
      - "5002:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
    networks:
      - api-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/api/locations"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  api-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  gateway-logs:
    driver: local
